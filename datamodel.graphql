type User {
  id: ID! @id
  firstName: String
  lastName: String
  username: String! @unique
  email: String! @unique @required
  avatar: String
  biography: String
  link: String
  latitude: Float
  longitude: Float
  following: [User!]! @relation(name: "UserFollowing")
  followers: [User!]! @relation(name: "UserFollowers")
  buckets: [Bucket!]!
  activatedAt: DateTime
  activationToken: String @unique
  activationSentAt: DateTime
  resetPasswordToken: String @unique
  resetPasswordSentAt: DateTime
  password: String! @required
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  files: [File!]!
}

type File {
  id: ID! @id
  url: String!
  owner: User!
  fileName: String!
  mimetype: String!
  encoding: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Bucket {
  id: ID! @id
  parent: Bucket @relation(name: "ChildBuckets")
  title: String!
  description: String
  owner: User!
  privateBucket: Boolean @default(value: false)
  childs: [Bucket!]! @relation(name: "ChildBuckets")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}