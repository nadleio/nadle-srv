type Query {
  currentUser: User!
}

type User {
    id: ID!
    firstName: String
    lastName: String
    email: String!
    buckets: [Bucket!]!
}

type Mutation {
  signup(
    firstName: String,
    lastName: String,
    email: String!,
    password: String!
  ): TransactionStatusEvent
  login(email: String!, password: String!): AuthPayload
  verify(token: String!): TransactionStatusEvent
  forgotPassword(email: String!): TransactionStatusEvent
  changePassword(token: String!, newPassword: String!): TransactionStatusEvent
  changePasswordAuth(oldPassword: String!, newPassword: String!): TransactionStatusEvent
  createBucket(parent: String, title: String!, description: String, privateBucket: Boolean): TransactionStatusBucket
}

type TransactionStatusEvent implements TransactionStatus {
  message: String!
  success: Boolean!
  errorCode: String
}

type TransactionStatusBucket implements TransactionStatus {
  message: String!
  success: Boolean!
  errorCode: String
  data: Bucket
}

type AuthPayload {
  token: String!
  user: User!
}
