scalar Upload

# Models
type User {
  id: ID!
  firstName: String
  lastName: String
  username: String!
  email: String!
  avatar: String
  buckets: [Bucket!]!
  followers(limit: Int, offset: Int): Follows
  following(limit: Int, offset: Int): Follows
  files(limit: Int, offset: Int): Files
}

type File {
  id: ID!
  owner: User!
  url: String!
  fileName: String!
  mimetype: String!
  encoding: String
}

type AuthPayload {
  token: String!
  user: User!
}

type Follows implements Paging {
  count: Int
  pages: Int
  results: [User!]!
}

type Files implements Paging {
  count: Int
  pages: Int
  results: [File!]!
}

# Queries
type Query {
  currentUser: TransactionStatusUser!
  getSelf: TransactionStatusUser!
}

# Mutations
type Mutation {
  signup(
    email: String!,
    username: String!,
    password: String!
  ): TransactionStatusEvent
  login(identifier: String!, password: String!): TransactionStatusAuth
  verify(token: String!): TransactionStatusEvent
  forgotPassword(email: String!): TransactionStatusEvent
  changePassword(token: String!, newPassword: String!): TransactionStatusEvent
  changePasswordAuth(oldPassword: String!, newPassword: String!): TransactionStatusEvent
  createBucket(parent: String, title: String!, description: String, privateBucket: Boolean): TransactionStatusBucket
  followUser(id: String): TransactionStatusUser
  unFollowUser(id: String): TransactionStatusUser
  uploadFile(file: Upload!): TransactionStatusFile
}

# Responses
type TransactionStatusEvent implements TransactionStatus {
  message: String!
  success: Boolean!
  errorCode: String
  data: String
}

type TransactionStatusFile implements TransactionStatus {
  message: String!
  success: Boolean!
  errorCode: String
  data: File
}

type TransactionStatusBucket implements TransactionStatus {
  message: String!
  success: Boolean!
  errorCode: String
  data: Bucket
}

type TransactionStatusUser implements TransactionStatus {
  message: String!
  success: Boolean!
  errorCode: String
  data: User!
}

type TransactionStatusAuth implements TransactionStatus {
  message: String!
  success: Boolean!
  errorCode: String
  data: AuthPayload
}